Order: Run #Editing this line will have no effect, you must set it to "Run", "Pause" or "Stop" in a copy of this file at /run/user/$(id -u $USER)/WDir[RandomNumber]/MTConfig.conf during runtime to control the script. Just leave it on "Run", you probably won't need it unless the project requires long compillation time despite multithreading, during which you may want to pause it...
ThreadLimit: 0 # 0 = no limit
FeedFrequency: 0.001 # How many seconds to sleep when idling. Anything less then 0.001 will cause excessive CPU load when idling...
BatchSize: 1 # Number of files assigned to each idling thread...
SleepAfter: 200 # If a thread didn't get job after checking this many times, it sleeps longer to reduce CPU load.
SleepFor: 1 # how many seconds to sleep when in deep sleep. This reduces cpu load when the script is paused.
Dependencies: gcc git libssl-dev
Libraries: -lpthread
SourceDirectories: Source/Core
ProgramName: LibLab

# C++11 compatibility is only a must for everything within HexaLib directory. Arduino normally uses C++14 standard, but I was advised to aim for C++11 cause it's not entirely C++14 compatible. (avr-gcc doesn't ship with STL, or exceptions...) So the plan is to keep the standard c++11 for HexaLib, and C++14 for everything else. Use no exceptions, and I'll write my own STL replacement for arduino as needed, or use macros to replace code later.
Warnings: -Wcast-align -Wduplicated-cond -Wnull-dereference -Wlogical-op -Wshadow -Wdouble-promotion -Wuseless-cast -Wconversion -Wsign-conversion -Wnon-virtual-dtor -Woverloaded-virtual
WarningsMainOnly: -Wunused
ArduinoCompat: -Wc++11-compat -fno-exceptions

# The following isn't really a requirement, just for performance. I read somewhere dynamic casting and exceptions use rtti, and The Cherno said it does slow things down a bit... I tend to use neither dynamic casting, nor exceptions, so I'll disable it for now...
PerformanceOpt: -fno-rtti -O2
